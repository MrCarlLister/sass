// Buttons

// Generate Button Classes 
@each $x in $buttons {
  .btn--#{nth($x,1)} {
    background-color: #{nth($x,2)};
    color: #{nth($x,3)};
    &:hover
    {
      background-color: #{nth($x,4)};
      color: #{nth($x,5)};
    }
  }
}

// Generate Background Classes 
@each $x in $bg {
  .bg--#{nth($x,1)} {
    background-color: #{nth($x,2)};
    color: #{nth($x,3)};
  }
}

// Font px and rem calc
// Usage: @include font-size(14px)
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}

/// Mixin to manage responsive breakpoints

@mixin breakpoint($map) {
  $query: "";
  @if map-has-key($map, min) { $query: append($query, "min-width: #{map-get($map, min)}") }
  @if map-has-key($map, min) and map-has-key($map, max) { $query: append($query, ") and (") }
  @if map-has-key($map, max) { $query: append($query, "max-width: #{map-get($map, max)}") }
  @media screen and (#{$query}) { @content; }
}